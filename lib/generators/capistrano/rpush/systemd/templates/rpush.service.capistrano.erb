# This file tells systemd how to run Rpush as a 24/7 long-running daemon.
#
# Customize this file based on your bundler location, app directory, etc.
# Customize and copy this into /usr/lib/systemd/system (CentOS) or /lib/systemd/system (Ubuntu).
# Then run:
#   - systemctl enable <%= rpush_service_unit_name %>
#   - systemctl {start,stop,restart} <%= rpush_service_unit_name %>
#
# This file corresponds to a single Rpush process.  Add multiple copies
# to run multiple processes (rpush-1, rpush-2, etc).
#
# Use `journalctl -u <%= rpush_service_unit_name %> -rn 100` to view the last 100 lines of log output.
#
[Unit]
Description=rpush for <%= "#{fetch(:application)} (#{fetch(:stage)})" %>
# start us only once the network and logging subsystems are available,
# consider adding redis-server.service if Redis is local and systemd-managed.
After=syslog.target network.target

# See these pages for lots of options:
#
#   https://www.freedesktop.org/software/systemd/man/systemd.service.html
#   https://www.freedesktop.org/software/systemd/man/systemd.exec.html
#
# THOSE PAGES ARE CRITICAL FOR ANY LINUX DEVOPS WORK; read them multiple
# times! systemd is a critical tool for all developers to know and understand.
#
[Service]
Type=simple

WorkingDirectory=<%= File.join(fetch(:deploy_to), 'current') %>
ExecStart=<%= expanded_bundle_path %> exec rpush start -e <%= fetch(:rpush_env) %> <%= rpush_config %> <%= rpush_foreground %>

# Use `systemctl kill -s TSTP <%= rpush_service_unit_name %>` to quiet the Rpush process
<%="User=#{rpush_user}" if rpush_user %>
UMask=0002

<%="EnvironmentFile=#{File.join(fetch(:deploy_to), 'current')}/#{fetch(:rpush_service_unit_env_file)}" if fetch(:rpush_service_unit_env_file) %>

<% fetch(:rpush_service_unit_env_vars, []).each do |environment_variable| %>
  <%="Environment=#{environment_variable}" %>
<% end %>

# if we crash, restart
RestartSec=1
Restart=on-failure

# output goes to /var/log/syslog (Ubuntu) or /var/log/messages (CentOS)
<%="StandardOutput=append:#{fetch(:rpush_log)}" if fetch(:rpush_log) %>
<%="StandardError=append:#{fetch(:rpush_error_log)}" if fetch(:rpush_error_log) %>

SyslogIdentifier=<%= rpush_service_unit_name %>

[Install]
WantedBy=default.target
